/*
 * generated by Xtext 2.25.0
 */
grammar InternalTechDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.senacor.bdm.techdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.senacor.bdm.techdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.senacor.bdm.techdsl.services.TechDslGrammarAccess;

}
@parser::members {
	private TechDslGrammarAccess grammarAccess;

	public void setGrammarAccess(TechDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleLogDocument
entryRuleLogDocument
:
{ before(grammarAccess.getLogDocumentRule()); }
	 ruleLogDocument
{ after(grammarAccess.getLogDocumentRule()); } 
	 EOF 
;

// Rule LogDocument
ruleLogDocument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLogDocumentAccess().getGroup()); }
		(rule__LogDocument__Group__0)
		{ after(grammarAccess.getLogDocumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBaseEntity
entryRuleBaseEntity
:
{ before(grammarAccess.getBaseEntityRule()); }
	 ruleBaseEntity
{ after(grammarAccess.getBaseEntityRule()); } 
	 EOF 
;

// Rule BaseEntity
ruleBaseEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBaseEntityAccess().getGroup()); }
		(rule__BaseEntity__Group__0)
		{ after(grammarAccess.getBaseEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group__0__Impl
	rule__LogDocument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getLogDocumentAction_0()); }
	()
	{ after(grammarAccess.getLogDocumentAccess().getLogDocumentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group__1__Impl
	rule__LogDocument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getLogDocumentKeyword_1()); }
	'LogDocument'
	{ after(grammarAccess.getLogDocumentAccess().getLogDocumentKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group__2__Impl
	rule__LogDocument__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getNameAssignment_2()); }
	(rule__LogDocument__NameAssignment_2)
	{ after(grammarAccess.getLogDocumentAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group__3__Impl
	rule__LogDocument__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getLogDocumentAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group__4__Impl
	rule__LogDocument__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getGroup_4()); }
	(rule__LogDocument__Group_4__0)?
	{ after(grammarAccess.getLogDocumentAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getLogDocumentAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogDocument__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group_4__0__Impl
	rule__LogDocument__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getBaseentitiesKeyword_4_0()); }
	'baseentities'
	{ after(grammarAccess.getLogDocumentAccess().getBaseentitiesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group_4__1__Impl
	rule__LogDocument__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getLogDocumentAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group_4__2__Impl
	rule__LogDocument__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getBaseentitiesAssignment_4_2()); }
	(rule__LogDocument__BaseentitiesAssignment_4_2)
	{ after(grammarAccess.getLogDocumentAccess().getBaseentitiesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group_4__3__Impl
	rule__LogDocument__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getGroup_4_3()); }
	(rule__LogDocument__Group_4_3__0)*
	{ after(grammarAccess.getLogDocumentAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getLogDocumentAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogDocument__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group_4_3__0__Impl
	rule__LogDocument__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getLogDocumentAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LogDocument__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLogDocumentAccess().getBaseentitiesAssignment_4_3_1()); }
	(rule__LogDocument__BaseentitiesAssignment_4_3_1)
	{ after(grammarAccess.getLogDocumentAccess().getBaseentitiesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BaseEntity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseEntity__Group__0__Impl
	rule__BaseEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseEntity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseEntityAccess().getBaseEntityAction_0()); }
	()
	{ after(grammarAccess.getBaseEntityAccess().getBaseEntityAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseEntity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseEntity__Group__1__Impl
	rule__BaseEntity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseEntity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseEntityAccess().getBaseEntityKeyword_1()); }
	'BaseEntity'
	{ after(grammarAccess.getBaseEntityAccess().getBaseEntityKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseEntity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BaseEntity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseEntity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBaseEntityAccess().getNameAssignment_2()); }
	(rule__BaseEntity__NameAssignment_2)
	{ after(grammarAccess.getBaseEntityAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LogDocument__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogDocumentAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getLogDocumentAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__BaseentitiesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogDocumentAccess().getBaseentitiesBaseEntityParserRuleCall_4_2_0()); }
		ruleBaseEntity
		{ after(grammarAccess.getLogDocumentAccess().getBaseentitiesBaseEntityParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LogDocument__BaseentitiesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLogDocumentAccess().getBaseentitiesBaseEntityParserRuleCall_4_3_1_0()); }
		ruleBaseEntity
		{ after(grammarAccess.getLogDocumentAccess().getBaseentitiesBaseEntityParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BaseEntity__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBaseEntityAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getBaseEntityAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
